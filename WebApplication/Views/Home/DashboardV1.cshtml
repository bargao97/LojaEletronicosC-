@{
    ViewBag.Title = "Bem Vindo ao sistema de credenciamento";
}
@using WebApplication.Models
@section Menu {
    @Scripts.Render("~/Scripts/Home/DashboardV1/menu")
}

@Styles.Render("~/AdminLTE/plugins/morris/css")
@Styles.Render("~/AdminLTE/plugins/jvectormap/css")
@Styles.Render("~/AdminLTE/plugins/datepicker/css")
@Styles.Render("~/AdminLTE/plugins/daterangepicker/css")
@Styles.Render("~/AdminLTE/plugins/bootstrap-wysihtml5/css")



@section Scripts {
    @Scripts.Render("~/AdminLTE/plugins/jquery-ui/js")
    <script>
        $.widget.bridge('uibutton', $.ui.button);
        //grafico de credenciamento por funcionario
        function verificarGrafico() {
            var usuarios = $('#usuarios option:selected').val();
            var dataInicio = document.getElementById("dataInicio").value;
            var dataFim = document.getElementById("dataFim").value;
            var url = '@Url.Action("credenciam-entosPorFuncionario", "Grafico")' + "?dataInicial=" + dataInicio + '&dataFinal=' + dataFim + "&usuarios=" + usuarios;
            console.log("url = " + url);
            //Verifica se campo Status possui valor informado.
            if (url != "") {
                //Aciona Action para obter o resultado em JSON/
                $.getJSON(url, function (dadosOcorrencias) {
                    //limpa conteudo da div myfirstchart que continha o grafico anterior...
                    $("#GraficoCredenciamentosStatus").html("");

                    if (dadosOcorrencias.length > 0) {

                        //Cria o novo grafico
                        new Morris.Bar({
                            // ID of the element in which to draw the chart.
                            element: 'GraficoCredenciamentosStatus',
                            // Chart data records -- each entry in this array corresponds to a point on
                            // the chart.
                            data: dadosOcorrencias,
                            // The name of the data record attribute that contains x-values.
                            xkey: 'Status',
                            // A list of names of data record attributes that contain y-values.
                            ykeys: ['total'],

                            //Cores das barras
                            barColors: function (row, series, type) {
                                if (row.x % 2 == 0)
                                    return '#3980B5';
                                else
                                    return '#0B62A4';
                            },

                            // Labels for the ykeys -- will be displayed when you hover over the
                            // chart.
                            labels: ['Total']
                        });

                    }
                    else {
                        $("#GraficoCredenciamentosStatus").html("<center>Dados inexistentes</center>");
                    }//end if.
                });
            }
        }
        function verificarGraficoContrato() {
            var dataInicio = document.getElementById("dataInicioContrato").value;
            var dataFim = document.getElementById("dataFimContrato").value;
            var url = '@Url.Action("CredenciamentosPorContrato", "Grafico")' + "?dataInicial=" + dataInicio + '&dataFinal=' + dataFim;
            console.log("url = " + url);
            //Verifica se campo Status possui valor informado.
            if (url != "") {
                //Aciona Action para obter o resultado em JSON/
                $.getJSON(url, function (dadosOcorrencias) {
                    //limpa conteudo da div myfirstchart que continha o grafico anterior...
                    $("#GraficoContratoStatus").html("");

                    if (dadosOcorrencias.length > 0) {

                        //Cria o novo grafico
                        new Morris.Bar({
                            // ID of the element in which to draw the chart.
                            element: 'GraficoContratoStatus',
                            // Chart data records -- each entry in this array corresponds to a point on
                            // the chart.
                            data: dadosOcorrencias,
                            // The name of the data record attribute that contains x-values.
                            xkey: 'Status',
                            // A list of names of data record attributes that contain y-values.
                            ykeys: ['total'],

                            //Cores das barras
                            barColors: function (row, series, type) {
                                if (row.x % 2 == 0)
                                    return '#3980B5';
                                else
                                    return '#0B62A4';
                            },

                            // Labels for the ykeys -- will be displayed when you hover over the
                            // chart.
                            labels: ['Total']
                        });

                    }
                    else {
                        $("#GraficoContratoStatus").html("<center>Dados inexistentes</center>");
                    }//end if.
                });
            }
        } function verificarGraficoregiao() {
            var contrato = document.getElementById("IDCONTRATO").value;
            var url = '@Url.Action("CredenciamentoPorRegiao", "Grafico")' + "?IDCONTRATO=" + contrato;
            console.log("url = " + url);
            //Verifica se campo Status possui valor informado.
            if (url != "") {
                //Aciona Action para obter o resultado em JSON/
                $.getJSON(url, function (dadosOcorrencias) {
                    //limpa conteudo da div myfirstchart que continha o grafico anterior...
                    $("#GraficoCredenciamentosRegiao").html("");

                    if (dadosOcorrencias.length > 0) {

                        //Cria o novo grafico
                        new Morris.Bar({
                            // ID of the element in which to draw the chart.
                            element: 'GraficoCredenciamentosRegiao',
                            // Chart data records -- each entry in this array corresponds to a point on
                            // the chart.
                            data: dadosOcorrencias,
                            // The name of the data record attribute that contains x-values.
                            xkey: 'regiao',
                            // A list of names of data record attributes that contain y-values.
                            ykeys: ['total'],

                            //Cores das barras
                            barColors: function (row, series, type) {
                                if (row.x % 2 == 0)
                                    return '#3980B5';
                                else
                                    return '#0B62A4';
                            },

                            // Labels for the ykeys -- will be displayed when you hover over the
                            // chart.
                            labels: ['Total']
                        });

                    }
                    else {
                        $("#GraficoCredenciamentosRegiao").html("<center>Dados inexistentes</center>");
                    }//end if.
                });
            }
        }
        function jsFunction(value){
            $('#resulInformacoes').empty(); //Limpando a tabela
            var contrato = document.getElementById("IDCONTRATOINFO").value;
            $.ajax({
                type: 'post',		//Definimos o método HTTP usado
                dataType: 'json',	//Definimos o tipo de retorno
                url: '@Url.Action("InfoCredenciamentos","CREDENCIAMENTOS")' + "?IDCONTRATO=" + contrato,//Definindo o arquivo onde serão buscados os dados
                success: function (dados) {
                    for (var i = 0; dados.length > i; i++) {
                        //Adicionando registros retornados na tabela
                        $('#resulInformacoes').append('<tr><td>' + dados[i].Status + '</td><td>' + dados[i].total);
                    }
                }
            });
        }
        

    </script>
    @Scripts.Render("~/AdminLTE/plugins/jquery-ui/js")
    @Scripts.Render("~/AdminLTE/plugins/bootstrap-wysihtml5/js")
    @Scripts.Render("~/AdminLTE/plugins/sparkline/js")
    @Scripts.Render("~/AdminLTE/plugins/jvectormap/js")
    @Scripts.Render("~/AdminLTE/plugins/daterangepicker/js")
    @Scripts.Render("~/AdminLTE/plugins/knob/js")
    @Scripts.Render("~/AdminLTE/plugins/raphael/js")
    @Scripts.Render("~/AdminLTE/plugins/morris/js")
    @Scripts.Render("~/AdminLTE/plugins/datepicker/js")
    @Scripts.Render("~/Scripts/Home/DashboardV1")
}